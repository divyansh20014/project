<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:lang="http://www.springframework.org/schema/lang"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Simple Processor Bean -->
    <bean id="simpleProcessor" class="org.apache.camel.Processor">
        <property name="process" value="Hello from Camel!"/>
    </bean>

    <!-- Route definition using a bean -->
    <bean id="simpleRouteBuilder" class="org.apache.camel.builder.RouteBuilder">
        <property name="routes">
            <list>
                <bean class="org.apache.camel.builder.RouteBuilder">
                    <property name="id" value="simpleRoute"/>
                    <property name="from" value="direct:start"/>
                    <property name="to" value="log:received"/>
                    <property name="process" ref="simpleProcessor"/>
                </bean>
            </list>
        </property>
    </bean>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                           http://www.springframework.org/schema/beans/spring-beans.xsd">

   <!-- Example: Using AspectJ Weaver -->
   <bean id="aspectJWeaver" class="org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter" />

   <!-- Example: Using Camel API (for routes or context) -->
   <bean id="camelContext" class="org.apache.camel.impl.DefaultCamelContext">
       <property name="name" value="BOS-Camel-Context"/>
   </bean>

   <!-- Example: Using Camel Utility (camel-util JAR) -->
   <bean id="camelUtility" class="org.apache.camel.util.CamelContextHelper">
       <constructor-arg ref="camelContext" />
   </bean>

   <!-- Example: Using Jakarta Activation API -->
   <bean id="activationFactory" class="jakarta.activation.ActivationDataFlavor">
       <constructor-arg value="application/xml"/>
       <constructor-arg value="XML Data Flavor"/>
   </bean>

   <!-- Example: Using Jasypt for encryption/decryption -->
   <bean id="stringEncryptor" class="org.jasypt.encryption.pbe.StandardPBEStringEncryptor">
       <property name="password" value="secretKey"/>
   </bean>

   <!-- Example: Using SLF4J for logging -->
   <bean id="logger" class="org.slf4j.LoggerFactory" factory-method="getLogger">
       <constructor-arg value="BOSLogger"/>
   </bean>

</beans>
