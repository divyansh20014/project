<bean id="keyStore" class="org.apache.camel.util.jsse.KeyStoreParameters">
        <property name="resource" value="file:/path/to/keystore.jks" />
        <property name="password" value="keystorePassword" />
    </bean>

    <!-- Key Manager Configuration -->
    <bean id="keyManagers" class="org.apache.camel.util.jsse.KeyManagersParameters">
        <property name="keyStore" ref="keyStore" />
        <property name="keyPassword" value="keyPassword" />
    </bean>

   
    <bean id="trustStore" class="org.apache.camel.util.jsse.KeyStoreParameters">
        <property name="resource" value="file:/path/to/truststore.jks" />
        <property name="password" value="truststorePassword" />
    </bean>

    <!-- Trust Manager Configuration -->
    <bean id="trustManagers" class="org.apache.camel.util.jsse.TrustManagersParameters">
        <property name="keyStore" ref="trustStore" />
    </bean>

    <!-- SSLContext Configuration for mTLS -->
    <bean id="sslContextParameters" class="org.apache.camel.util.jsse.SSLContextParameters">
        <property name="keyManagers" ref="keyManagers" />
        <property name="trustManagers" ref="trustManagers" />
        <property name="secureSocketProtocol" value="TLS" />
    </bean>

    <!-- Jetty Component Configuration (mTLS server) -->
    <bean id="jetty" class="org.apache.camel.component.jetty.JettyHttpComponent">
        <property name="sslContextParameters" ref="sslContextParameters" />
    </bean>


<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://camel.apache.org/schema/spring 
           http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- SSL Context Parameters -->
    <camel:sslContextParameters id="sslContextParameters">
        <camel:keyManagers keyPassword="{{keyPassword}}">
            <camel:keyStore resource="{{serverKeystore}}" password="{{keystorePassword}}" />
        </camel:keyManagers>
        <camel:trustManagers>
            <camel:keyStore resource="{{serverTruststore}}" password="{{truststorePassword}}" />
        </camel:trustManagers>
        <camel:serverParameters>
            <camel:clientAuthentication>REQUIRE</camel:clientAuthentication>
        </camel:serverParameters>
    </camel:sslContextParameters>

</beans>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:camel="http://camel.apache.org/schema/spring"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://camel.apache.org/schema/spring 
           http://camel.apache.org/schema/spring/camel-spring.xsd">

    <!-- Define a simple test Camel route -->
    <camel:camelContext id="testCamelContext">
        <camel:route>
            <camel:from uri="timer:test?period=1000"/>
            <camel:log message="Test route running every second"/>
        </camel:route>
    </camel:camelContext>

</beans>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Define a simple bean that can be referenced in Camel routes -->
    <bean id="testBean" class="org.apache.commons.lang3.time.StopWatch">
        <!-- This bean can be used or invoked in your main Camel context if needed -->
    </bean>

</beans>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- Define a simple bean that can be referenced in Camel routes -->
    <bean id="testBean" class="com.example.TestBean"/>

    <!-- Define a Camel route using Spring DSL -->
    <bean id="logRoute" class="org.apache.camel.builder.RouteBuilder">
        <property name="camelContext" ref="camelContext"/>
        <property name="routeId" value="logRoute"/>
        <property name="from" value="timer:logTimer?period=5000"/>
        <property name="log" value="This is a test log message from the Camel route!"/>
    </bean>
    
</beans>


<bean id="jetty" class="org.apache.camel.component.jetty.JettyHttpComponent">
    <property name="sslSocketConnectorProperties">
        <map>
            <entry key="password" value="..."/>
            <entry key="keyPassword" value="..."/>
            <entry key="keystore" value="..."/>
            <entry key="needClientAuth" value="..."/>
            <entry key="truststore" value="..."/>
        </map>
    </property>
</bean>


keytool -genkeypair -v -keystore server-keystore.p12 -keyalg RSA -keysize 2048 -storetype PKCS12 -storepass serverPassword -keypass serverPassword -alias server -dname "CN=localhost, OU=Test, O=TestOrg, L=TestCity, S=TestState, C=US"
keytool -genkeypair -v -keystore client-keystore.p12 -keyalg RSA -keysize 2048 -storetype PKCS12 -storepass clientPassword -keypass clientPassword -alias client -dname "CN=localhost, OU=Test, O=TestOrg, L=TestCity, S=TestState, C=US"
