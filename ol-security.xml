<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd http://camel.apache.org/schema/spring-security http://camel.apache.org/schema/spring-security/camel-spring-security.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
<!--  An alternative is to use SSLContextParameters, KeyStoreParameters, TrustManagersParameters classes explicitly.  -->
<!--  which may be preferred in case we want to hide pass phrase better.  -->
<sslContextParameters xmlns="http://camel.apache.org/schema/spring" id="sslContextParameters">
<secureSocketProtocols>
<!--  Do NOT enable SSLv3 (POODLE vulnerability)  -->
<secureSocketProtocol>TLSv1</secureSocketProtocol>
<secureSocketProtocol>TLSv1.1</secureSocketProtocol>
<secureSocketProtocol>TLSv1.2</secureSocketProtocol>
</secureSocketProtocols>
<keyManagers keyPassword="{{passPhraseForKeyRest}}">
<keyStore resource="{{keyStoreForRest}}" password="{{passPhraseForKeyStoreRest}}"/>
</keyManagers>
<trustManagers>
<keyStore resource="{{trustStoreForRest}}" password="{{passPhraseForTrustStoreRest}}"/>
</trustManagers>
</sslContextParameters>
</beans>
